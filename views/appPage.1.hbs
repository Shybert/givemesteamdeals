<!DOCTYPE html>
<html>
    <head>
        <title>{{title}}</title>
    </head>
    <body>
        <div id="appTitle">
            <h1>{{title}}</h1>
        </div>
        <div id="appInfo">
            <div id="basics">
                <div id="picture">
                    <img src={{thumbnail}} alt="App image">
                </div>

                <div id="info">
                    <div id="genericInfo">
                        <div id="price">
                            Example price
                        </div>
                        <span id="developers">Developer(s): {{developers}}</span>
                        <br>
                        <span id="publishers">Publisher(s): {{publishers}}</span>
                        <br>
                        <span id="releaseDate">Release date: {{release_date}}</span>
                    </div>

                    <div id="steamSpyInfo">
                        <span id="owners">Owners: {{owners}}</span>
                        <br>
                        <span id="playersForever">Total players: {{players_forever}}</span>
                        <br>
                        <span id="players2Weeks">Players in the last 2 weeks: {{players_2weeks}}</span>
                        <br>
                        <span id="averageForever">Average players: {{average_forever}}</span>
                        <br>
                        <span id="average2Weeks">Average players in the last 2 weeks: {{average_2weeks}}</span>
                        <br>
                        <span id="medianForever">Median players: {{median_forever}}</span>
                        <br>
                        <span id="median2Weeks">Median players in the last 2 weeks: {{median_2weeks}}</span>
                    </div>
                    <button id="enter">Enter</button>
                    <div id="ratingInfo">
                        <div id="ratingChart" style="width:400px; height:400px;">
                            <canvas id="ratingCanvas"></canvas>
                        </div>
                        <div id="ratingInfo">
                            <div id="ratingText">
                                Rating text: {{steam_rating_text}}
                            </div>
                            <div id="ratingPosNeg">
                                <span id="ratingPositive">Positive: {{steam_rating_positive}}</span>
                                <span id="ratingNegative">Negative: {{steam_rating_negative}}</span>
                            </div>
                        </div>
                        <div id="ratingMetacriticLink">
                            Metacritic link: {{metacritic_link}} {{#unless metacritic_link}}Not available{{/unless}}
                        </div>
                    </div>
                </div>

                <div id="priceCharts">
                    <div id="priceHistory">
                        <canvas id="priceHistoryCanvas"></canvas>
                    </div>
                    <div id="saleHistory">
                        Example sale_history
                    </div>
                </div>
            </div>
        </div>
        <span id="{{steam_id}}" class="id"></span>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
        <script src="https://code.jquery.com/jquery-3.3.1.js"></script>
        <script>
             Chart.pluginService.register({
                beforeDraw: function (chart) {
                    if (chart.config.options.elements.center) {
                    //Get ctx from string
                    var ctx = chart.chart.ctx;

                    //Get options from the center object in options
                    var centerConfig = chart.config.options.elements.center;
                    var fontStyle = centerConfig.fontStyle || 'Arial';
                    var txt = centerConfig.text;
                    var color = centerConfig.color || '#000';
                    var sidePadding = centerConfig.sidePadding || 20;
                    var sidePaddingCalculated = (sidePadding/100) * (chart.innerRadius * 2)
                    //Start with a base font of 30px
                    ctx.font = "30px " + fontStyle;

                    //Get the width of the string and also the width of the element minus 10 to give it 5px side padding
                    var stringWidth = ctx.measureText(txt).width;
                    var elementWidth = (chart.innerRadius * 2) - sidePaddingCalculated;

                    // Find out how much the font can grow in width.
                    var widthRatio = elementWidth / stringWidth;
                    var newFontSize = Math.floor(30 * widthRatio);
                    var elementHeight = (chart.innerRadius * 2);

                    // Pick a new font size so it will not be larger than the height of label.
                    var fontSizeToUse = Math.min(newFontSize, elementHeight);

                    //Set font settings to draw it correctly.
                    ctx.textAlign = 'center';
                    ctx.textBaseline = 'middle';
                    var centerX = ((chart.chartArea.left + chart.chartArea.right) / 2);
                    var centerY = ((chart.chartArea.top + chart.chartArea.bottom) / 2);
                    ctx.font = fontSizeToUse+"px " + fontStyle;
                    ctx.fillStyle = color;

                    //Draw text in center
                    ctx.fillText(txt, centerX, centerY);
                    }
                }
                });

            // Checking what color to make the text inside the doughnut chart
            let donutTextColor;
            if (Number({{steam_rating_percent}}) >= 70) {
                donutTextColor = "#0094ea";
            } else if (Number({{steam_rating_percent}}) <= 39) {
                donutTextColor = "#e34600"
            } else {
                donutTextColor = "#ffa300"
            }

            const ctx = document.getElementById("ratingCanvas").getContext("2d");
            const ratingChart = new Chart(ctx, {
                type: "doughnut",
                data: {
                    labels: ["Negative", "Positive"],
                    datasets: [{
                        label: "Rating Percentage",
                        backgroundColor: ["#e34600", "#0094ea"],
                        data: [{{steam_rating_negative}}, {{steam_rating_positive}}],
                    }] 
                },
                options: {
                    elements: {
                        center: {
                            text: {{steam_rating_percent}} + " %",
                            color: donutTextColor,
                        },
                    },
                    legend: {
                        display: false,
                    },
                },
            });


            // Setting price_history to a variable for counting
            let priceData;
            $(document).ready(() => {
                $.get("/price_history/{{steam_id}}", (data) => {
                    priceData = data;
                    console.log(priceData);
                    createpriceHistoryChart();
                });
            });

            function createpriceHistoryChart() {
                const ctx2 = document.getElementById("priceHistoryCanvas").getContext("2d");
                console.log("works");
                const priceHistoryChart = new Chart(ctx2, {
                    type: "line",
                    data: {
                        labels: [
                            "2018-08-08",
                        ],
                        datasets: [{
                            label: "A dataset",
                            backgroundColor: "#090909",
                            borderColor: "#eeeeee",
                            fill: true,
                            data: [
                                50
                            ],
                        }],
                    },
                });
            }
            // const ctx2 = document.getElementById("priceHistoryCanvas").getContext("2d");
            // const priceHistoryChart = new Chart(ctx2, {
                //type: "area",
                //data: data,
                //options: options,
            //});
        </script>
    </body>
</html>